{"version":3,"sources":["components/Clock.jsx","App.jsx","index.js"],"names":["Clock","state","date","Date","toLocaleTimeString","timer","setInterval","setState","console","log","this","clearInterval","name","props","className","React","Component","App","isClockVisible","clockName","changeVisibility","renameClock","newName","randomizer","Math","floor","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,EAKEC,MAAQC,aACN,WACE,EAAKC,SAAS,CACZL,MAAM,IAAIC,MAAOC,uBAInBI,QAAQC,IAAI,EAAKR,MAAMC,QAEzB,KAdJ,kEAkBI,OAAOQ,KAAKL,QAlBhB,6CAsBIM,cAAcD,KAAKL,SAtBvB,+BAyBY,IACAH,EAASQ,KAAKT,MAAdC,KACAU,EAASF,KAAKG,MAAdD,KAER,OACE,oCACE,wBAAIE,UAAU,gBAAd,iBACaF,IAEb,2CAEG,IACAV,QArCX,GAA2Ba,IAAMC,WC6DlBC,G,kNAzDbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAW,G,EAGbC,iBAAmB,WACjB,EAAKb,UAAS,SAAAN,GAAK,MAAK,CACtBiB,gBAAiBjB,EAAMiB,oB,EAI3BG,YAAc,WACZ,EAAKd,UAAS,SAACN,GACb,IAAMqB,EAAU,EAAKC,aAKrB,OAFAf,QAAQC,IAAR,qCAA0CR,EAAMkB,UAAhD,eAAgEG,IAEzD,CAAEH,UAAWG,O,EAIxBC,WAAa,kBACXC,KAAKC,MAAsB,IAAhBD,KAAKE,W,uDAGR,IACAR,EAAmBR,KAAKT,MAAxBiB,eAER,OACE,yBAAKJ,UAAU,OACb,yBAAKA,UAAU,kBACZI,EACG,kBAAC,EAAD,CAAON,KAAMF,KAAKT,MAAMkB,YACxB,IAIN,4BACEQ,KAAK,SACLC,QAASlB,KAAKU,iBACdN,UAAU,eAETI,EAAiB,aAAe,cAEnC,4BACES,KAAK,SACLC,QAASlB,KAAKW,YACdP,UAAU,eAHZ,wB,GA9CUC,IAAMC,YCFxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2fbeb431.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  }\n\n  timer = setInterval(\n    () => {\n      this.setState({\n        date: new Date().toLocaleTimeString(),\n      });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.date);\n    },\n    1000,\n  );\n\n  componentDidMount() {\n    return this.timer;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <>\n        <h4 className=\"App__heading\">\n          {`Clock #${name}`}\n        </h4>\n        <p>\n          Current time:\n          {' '}\n          {date}\n        </p>\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  }\n\n  changeVisibility = () => {\n    this.setState(state => ({\n      isClockVisible: !state.isClockVisible,\n    }));\n  }\n\n  renameClock = () => {\n    this.setState((state) => {\n      const newName = this.randomizer();\n\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${state.clockName} to ${newName}`);\n\n      return { clockName: newName };\n    });\n  }\n\n  randomizer = () => (\n    Math.floor(Math.random() * 1000)\n  )\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__container\">\n          {isClockVisible\n            ? <Clock name={this.state.clockName} />\n            : ''\n          }\n        </div>\n\n        <button\n          type=\"button\"\n          onClick={this.changeVisibility}\n          className=\"App__button\"\n        >\n          {isClockVisible ? 'Hide Clock' : 'Show Clock'}\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.renameClock}\n          className=\"App__button\"\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}